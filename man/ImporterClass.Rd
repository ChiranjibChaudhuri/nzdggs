% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dataImporterClass.R
\name{ImporterClass}
\alias{ImporterClass}
\title{DSN_NAME}
\description{
DSN_NAME

DSN_NAME
}
\examples{

## ------------------------------------------------
## Method `ImporterClass$setDSN`
## ------------------------------------------------



## ------------------------------------------------
## Method `ImporterClass$setExternalTableParams`
## ------------------------------------------------



## ------------------------------------------------
## Method `ImporterClass$setTableDetails`
## ------------------------------------------------



## ------------------------------------------------
## Method `ImporterClass$importDirectory`
## ------------------------------------------------


}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-setDSN}{\code{ImporterClass$setDSN()}}
\item \href{#method-setExternalTableParams}{\code{ImporterClass$setExternalTableParams()}}
\item \href{#method-setTableDetails}{\code{ImporterClass$setTableDetails()}}
\item \href{#method-importDirectory}{\code{ImporterClass$importDirectory()}}
\item \href{#method-importFile}{\code{ImporterClass$importFile()}}
\item \href{#method-clone}{\code{ImporterClass$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-setDSN"></a>}}
\if{latex}{\out{\hypertarget{method-setDSN}{}}}
\subsection{Method \code{setDSN()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ImporterClass$setDSN(DSN_NAME)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{DSN_NAME}}{}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{

}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-setExternalTableParams"></a>}}
\if{latex}{\out{\hypertarget{method-setExternalTableParams}{}}}
\subsection{Method \code{setExternalTableParams()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ImporterClass$setExternalTableParams(params, append = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{params}}{list of parameters}

\item{\code{append}}{wheather append parameter to existing list or replace it}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{

}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-setTableDetails"></a>}}
\if{latex}{\out{\hypertarget{method-setTableDetails}{}}}
\subsection{Method \code{setTableDetails()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ImporterClass$setTableDetails(
  tableName,
  finaltablecolumns,
  inputfilecolumns,
  insertcolumns,
  createTable = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{tableName}}{name of final table}

\item{\code{finaltablecolumns}}{column list of final table. this is used to make a new table it must be a list
sasme as the following list finaltablecolumns=list(name=c('dggid','value'),type=c('bigint','float'))}

\item{\code{inputfilecolumns}}{column list of text files, it must be as following list  inputfilecolumns=list(name=c('id','value','dggid'),type=c('varchar(100)','varchar(100)','varchar(100)'))}

\item{\code{insertcolumns}}{The type convertion of tables when copying from external table to distanation table. use the following example insertcolumns='CAST(dggid AS bigint),CAST(value AS float )', NOTE: the order of columns are same as @param finaltablecolumns list and column names are as @param inputfilecolumns}

\item{\code{createTable}}{= FALSE If true it drops previus table if exists  and makes a new table}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{

}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-importDirectory"></a>}}
\if{latex}{\out{\hypertarget{method-importDirectory}{}}}
\subsection{Method \code{importDirectory()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ImporterClass$importDirectory(path, extention = "*.csv")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{path}}{folder name}

\item{\code{extention}}{= "*.csv" file extentions in folder}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{

}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-importFile"></a>}}
\if{latex}{\out{\hypertarget{method-importFile}{}}}
\subsection{Method \code{importFile()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ImporterClass$importFile(filename)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{filename}}{file name}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{

}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ImporterClass$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
