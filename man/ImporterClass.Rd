% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dataImporterClass.R
\name{ImporterClass}
\alias{ImporterClass}
\title{Class to import text files into netezza db using external table}
\description{
Class to import text files into netezza db using external table

Class to import text files into netezza db using external table
}
\examples{
importer <- ImporterClass$new()
importer$setDSN('NZSQL_M')
importer$setTableDetails('tbl_test',finaltablecolumns=list(name=c('dggid','value'),type=c('bigint','float')),
                         inputfilecolumns=list(name=c('id','value','dggid'),type=c('varchar(100)','varchar(100)','varchar(100)')),insert columns='CAST(dggid AS bigint),CAST(value AS float )',createTable = TRUE)
importer$importDirectory('F:/DEM/')
importer$importFile('F:/DEM/1.csv')
Set DSN name for ODBC connecion

}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-setDSN}{\code{ImporterClass$setDSN()}}
\item \href{#method-setExternalTableParams}{\code{ImporterClass$setExternalTableParams()}}
\item \href{#method-setTableDetails}{\code{ImporterClass$setTableDetails()}}
\item \href{#method-importDirectory}{\code{ImporterClass$importDirectory()}}
\item \href{#method-importFile}{\code{ImporterClass$importFile()}}
\item \href{#method-clone}{\code{ImporterClass$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-setDSN"></a>}}
\if{latex}{\out{\hypertarget{method-setDSN}{}}}
\subsection{Method \code{setDSN()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ImporterClass$setDSN(DSN_NAME)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{DSN_NAME}}{DSN name
Set external table parameters. It must be a list of key- value format. see eample
this is existing list of params. list(name=c('SKIPROWS','QUOTEDVALUE','DELIMITER'),type=c('1',"'DOUBLE'","','"))
use append of you want to add a set of new params into list or replace it totally}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-setExternalTableParams"></a>}}
\if{latex}{\out{\hypertarget{method-setExternalTableParams}{}}}
\subsection{Method \code{setExternalTableParams()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ImporterClass$setExternalTableParams(params, append = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{params}}{list of parameters}

\item{\code{append}}{wheather append parameter to existing list or replace it
Set external table details}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-setTableDetails"></a>}}
\if{latex}{\out{\hypertarget{method-setTableDetails}{}}}
\subsection{Method \code{setTableDetails()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ImporterClass$setTableDetails(
  tableName,
  finaltablecolumns,
  inputfilecolumns,
  insertcolumns,
  createTable = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{tableName}}{name of final table}

\item{\code{finaltablecolumns}}{column list of final table. this is used to make a new table it must be a list
sasme as the following list finaltablecolumns=list(name=c('dggid','value'),type=c('bigint','float'))}

\item{\code{inputfilecolumns}}{column list of text files, it must be as following list  inputfilecolumns=list(name=c('id','value','dggid'),type=c('varchar(100)','varchar(100)','varchar(100)'))}

\item{\code{insertcolumns}}{The type convertion of tables when copying from external table to distanation table. use the following example insertcolumns='CAST(dggid AS bigint),CAST(value AS float )', NOTE: the order of columns are same as @param finaltablecolumns list and column names are as @param inputfilecolumns}

\item{\code{createTable}}{= FALSE If true it drops previus table if exists  and makes a new table
import a list of files from a folder}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-importDirectory"></a>}}
\if{latex}{\out{\hypertarget{method-importDirectory}{}}}
\subsection{Method \code{importDirectory()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ImporterClass$importDirectory(path, extention = "*.csv")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{path}}{folder name}

\item{\code{extention="*.csv"}}{file extentions in folder
import a single file}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-importFile"></a>}}
\if{latex}{\out{\hypertarget{method-importFile}{}}}
\subsection{Method \code{importFile()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ImporterClass$importFile(filename)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{filename}}{file name}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ImporterClass$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
